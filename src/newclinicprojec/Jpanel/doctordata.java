/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newclinicprojec.Jpanel;

import java.awt.Component;
import java.util.Enumeration;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.AbstractButton;
import javax.swing.event.EventListenerList;
import javax.swing.table.AbstractTableModel;
import newclinicprojec.controllers.DoctorJpaController;
import newclinicprojec.entities.Doctor;

/**
 *
 * @author Johm_93
 */
public class doctordata extends javax.swing.JPanel {

    /**
     * Creates new form doctordata
     */
    public doctordata() {
        initComponents();
    }
    EntityManagerFactory emf;
    DoctorJpaController doctorJpaController;
    DoctorTableModel doctorTableModel;

    public doctordata(EntityManagerFactory emf) {
        this.emf = emf;
        initComponents();
        this.emf = Persistence.createEntityManagerFactory("NewClinicProjecPU");
        this.doctorJpaController = new DoctorJpaController(this.emf);
        List<Doctor> doctors = this.doctorJpaController.findDoctorEntities();
        this.doctorTableModel = new DoctorTableModel(doctors);
        tabledoctordata.setModel(this.doctorTableModel);
        this.setEnableInput(this.inputdoctorform,false);

    }

    public void setEnableInput(javax.swing.JPanel p, boolean b) {

        for (Component c : p.getComponents()) {
            c.setEnabled(b);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        inputdoctorform = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txdoctortid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        radiobtnMale = new javax.swing.JRadioButton();
        radiobtnFemale = new javax.swing.JRadioButton();
        txtbirthdate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        btncancle = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabledoctordata = new javax.swing.JTable();
        btnnew = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();

        jLabel2.setText("Doctor ID");

        jLabel3.setText("Name");

        jLabel4.setText("Sex");

        jLabel5.setText("Birthdate");

        buttonGroup1.add(radiobtnMale);
        radiobtnMale.setText("Male");
        radiobtnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnMaleActionPerformed(evt);
            }
        });

        buttonGroup1.add(radiobtnFemale);
        radiobtnFemale.setText("Female");
        radiobtnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnFemaleActionPerformed(evt);
            }
        });

        jLabel6.setText("Address");

        jLabel7.setText("Phone");

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btncancle.setText("Cancle");
        btncancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputdoctorformLayout = new javax.swing.GroupLayout(inputdoctorform);
        inputdoctorform.setLayout(inputdoctorformLayout);
        inputdoctorformLayout.setHorizontalGroup(
            inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputdoctorformLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(19, 19, 19)
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtaddress)
                    .addComponent(txtbirthdate)
                    .addComponent(txdoctortid)
                    .addComponent(txtname)
                    .addComponent(txtphone)
                    .addGroup(inputdoctorformLayout.createSequentialGroup()
                        .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputdoctorformLayout.createSequentialGroup()
                                .addComponent(btnsave)
                                .addGap(18, 18, 18)
                                .addComponent(btncancle))
                            .addGroup(inputdoctorformLayout.createSequentialGroup()
                                .addComponent(radiobtnMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radiobtnFemale)))
                        .addGap(0, 40, Short.MAX_VALUE))))
        );
        inputdoctorformLayout.setVerticalGroup(
            inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputdoctorformLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txdoctortid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(radiobtnMale)
                    .addComponent(radiobtnFemale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtbirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(inputdoctorformLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave)
                    .addComponent(btncancle))
                .addGap(47, 47, 47))
        );

        jLabel10.setText("Doctor Data");

        tabledoctordata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Sex", "Birthdate", "Address", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabledoctordata);

        btnnew.setText("New");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(inputdoctorform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnnew)
                        .addGap(18, 18, 18)
                        .addComponent(btnedit)
                        .addGap(18, 18, 18)
                        .addComponent(btndelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputdoctorform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnnew)
                            .addComponent(btnedit)
                            .addComponent(btndelete))))
                .addContainerGap(135, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        // TODO add your handling code here
        this.setEnableInput(inputdoctorform, true);
         getDoctor= new Doctor();
    }//GEN-LAST:event_btnnewActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String docid = txdoctortid.getText();
        int doctorId = Integer.parseInt(docid);
       // System.out.println(doctorId);

        getDoctor.setDoctorid(doctorId);
        getDoctor.setName(txtname.getText());
        getDoctor.setSex(gender);
        getDoctor.setBirthdate(txtbirthdate.getText());
        getDoctor.setAddress(txtaddress.getText());
        getDoctor.setPhone(txtphone.getText());
        if (getDoctor.getId() != null && getDoctor.getId() != 0) {
            try {
                doctorJpaController.edit(getDoctor);
                doctorTableModel.fireTableDataChanged();

            } catch (Exception ex) {
                Logger.getLogger(doctordata.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            doctorJpaController.create(getDoctor);
           doctorTableModel.doctor.add(getDoctor);
          doctorTableModel.fireTableDataChanged();
          
        }
        setAllFieldNull();
          this.setEnableInput(inputdoctorform, false);

    }//GEN-LAST:event_btnsaveActionPerformed

    Doctor getDoctor;

    private void radiobtnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobtnMaleActionPerformed
        // TODO add your handling code here:
        gender = "Male";
    }//GEN-LAST:event_radiobtnMaleActionPerformed

    private void radiobtnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiobtnFemaleActionPerformed
        // TODO add your handling code here:
        gender = "Female";
    }//GEN-LAST:event_radiobtnFemaleActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        int i=tabledoctordata.getSelectedRow();
        this.setEnableInput(inputdoctorform, true);
        Doctor doctors=doctorTableModel.doctor.get(i);
        txdoctortid.setText(doctors.getDoctorid().toString());
        txdoctortid.setEnabled(false);
        txtname.setText(doctors.getName());
        String sex=doctors.getSex();
        if(sex=="Male")
            gender="Male";
        else
            gender="Female";
        Enumeration buttons = buttonGroup1.getElements();
        while(buttons.hasMoreElements()){
            AbstractButton btn = (AbstractButton)buttons.nextElement();
            if (btn.getActionCommand().equalsIgnoreCase(sex)){
                btn.setSelected(true);
            }
        }
        txtbirthdate.setText(doctors.getBirthdate());
        txtaddress.setText(doctors.getAddress());
        txtphone.setText(doctors.getPhone());
       // List<Doctor> doctors1=doctorTableModel.getDoctor();
        getDoctor=doctors;
    }//GEN-LAST:event_btneditActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        int i=tabledoctordata.getSelectedRow();
        Doctor n=(Doctor) doctorTableModel.doctor.get(i);
        try {
            doctorJpaController.destroy(n.getId());
            doctorTableModel.doctor.remove(i);
            doctorTableModel.fireTableDataChanged();
        } catch (Exception ex){
        Logger.getLogger(doctordata.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btncancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancleActionPerformed
        // TODO add your handling code here:
        setAllFieldNull();
        setEnableInput(inputdoctorform, false);
    }//GEN-LAST:event_btncancleActionPerformed
    private void setAllFieldNull() {
        txdoctortid.setText("");
        txtname.setText("");
        buttonGroup1.clearSelection();
        txtbirthdate.setText("");
        txtaddress.setText("");
        txtphone.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncancle;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnsave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel inputdoctorform;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radiobtnFemale;
    private javax.swing.JRadioButton radiobtnMale;
    private javax.swing.JTable tabledoctordata;
    private javax.swing.JTextField txdoctortid;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtbirthdate;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtphone;
    // End of variables declaration//GEN-END:variables
private String gender = null;
}

class DoctorTableModel extends AbstractTableModel {

    String[] columnName = { "DoctorId", "Name", "Sex", "Birthdate", "Address", "Phone"};
    List<Doctor> doctor;

    public DoctorTableModel(List<Doctor> doctors) {
        this.doctor = doctors;
        this.fireTableDataChanged();
    }

    public String[] getColumnName() {
        return columnName;
    }

    public void setColumnName(String[] columnName) {
        this.columnName = columnName;

    }

    public List<Doctor> getDoctor() {
        return doctor;
    }

    public void setDoctor(List<Doctor> doctor) {
        this.doctor = doctor;
        this.fireTableDataChanged();
    }

    public EventListenerList getListenerList() {
        return listenerList;
    }

    public void setListenerList(EventListenerList listenerList) {
        this.listenerList = listenerList;
    }

    @Override
    public int getRowCount() {
        return doctor.size();//To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getColumnCount() {
        return columnName.length; //To change body of generated methods, choose Tools | Templates.
    }
    @Override
    public String getColumnName(int i) {
        return columnName[i];
    }
    @Override
    public Object getValueAt(int i, int i1) {
        //To change body of generated methods, choose Tools | Templates.
        Doctor doct = doctor.get(i);
        switch (i1) {
            case 0:
                return doct.getDoctorid();
            case 1:
                return doct.getName();
            case 2:
                return doct.getSex();
            case 3:
                return doct.getBirthdate();
            case 4:
                return doct.getAddress();
            case 5:
                return doct.getPhone();
            default:
                return null;
        }
    }

}
